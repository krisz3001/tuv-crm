rules_version = '2';

service cloud.firestore {

  function isSignedIn() {
    return request.auth != null;
  }

  function clientIsValid(client) {
    return client.company is string &&
    client.contact is string
  }

  function offerIsValid(offer) {
    return offer.subject is string &&
    offer.commonAdvisor is string &&
    offer.expert is string &&
    offer.price is number
  }

  function expertIsValid(expert) {
    return expert.name is string &&
    expert.email is string &&
    expert.firebaseId is string &&
    expert.createdAt is timestamp &&
    expert.updatedAt is timestamp
  }

  match /databases/{database}/documents {

    match /clients {
      allow read, write: if isSignedIn();
    }

    match /clients/{clientId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && clientIsValid(request.resource.data);
      allow update: if isSignedIn() && clientIsValid(request.resource.data) && request.resource.data.createdAt == resource.data.createdAt;
      allow delete: if isSignedIn();
    }

    match /offers {
      allow read, write: if isSignedIn();
    }

    match /offers/{offerId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && offerIsValid(request.resource.data);
      allow update: if isSignedIn();
      allow delete: if isSignedIn();
    }

    match /offer-categories/{categoryId} {
      allow read, write: if isSignedIn();
    }

    match /experts/{expertId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn() && expertIsValid(request.resource.data);
      allow update: if isSignedIn() && request.resource.data.name is string;
    }
  }
}